Start epoch #1, learning rate for this epoch: [0.0002]
WARNING: out of memory, retrying with 2Gb of free GPU memory...
Waiting for 2147483648 bytes of free GPU memory. Retrying in 5 seconds...
Waiting for 2147483648 bytes of free GPU memory. Retrying in 5 seconds...
Waiting for 2147483648 bytes of free GPU memory. Retrying in 5 seconds...
Waiting for 2147483648 bytes of free GPU memory. Retrying in 5 seconds...
Waiting for 2147483648 bytes of free GPU memory. Retrying in 5 seconds...
Waiting for 2147483648 bytes of free GPU memory. Retrying in 5 seconds...
Waiting for 2147483648 bytes of free GPU memory. Retrying in 5 seconds...
Waiting for 2147483648 bytes of free GPU memory. Retrying in 5 seconds...
Waiting for 2147483648 bytes of free GPU memory. Retrying in 5 seconds...
Waiting for 2147483648 bytes of free GPU memory. Retrying in 5 seconds...
Traceback (most recent call last):
  File "/home/wallace/Code/HUST/UNET/utilities/train.py", line 24, in train
    outputs = model(data)
  File "/home/wallace/miniconda3/envs/deep_learning_project/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/wallace/miniconda3/envs/deep_learning_project/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/wallace/Code/HUST/UNET/model/unet.py", line 28, in forward
    n1, s1 = self.enc1(image)
  File "/home/wallace/miniconda3/envs/deep_learning_project/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/wallace/miniconda3/envs/deep_learning_project/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/wallace/Code/HUST/UNET/model/encoder.py", line 24, in forward
    x = self.conv2(x)
  File "/home/wallace/miniconda3/envs/deep_learning_project/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/wallace/miniconda3/envs/deep_learning_project/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/wallace/miniconda3/envs/deep_learning_project/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 460, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/wallace/miniconda3/envs/deep_learning_project/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 456, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 876.00 MiB. GPU 0 has a total capacty of 3.81 GiB of which 88.19 MiB is free. Including non-PyTorch memory, this process has 3.71 GiB memory in use. Of the allocated memory 2.97 GiB is allocated by PyTorch, and 672.89 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/home/wallace/Code/HUST/UNET/main.py", line 104, in <module>
    (train_loss_epoch, test_loss_epoch) = train.train(model= model, device= device, loss_function= loss_function, optimizer= optimizer, \
  File "/home/wallace/Code/HUST/UNET/utilities/train.py", line 28, in train
    utils.wait_until_enough_gpu_memory()
  File "/home/wallace/Code/HUST/UNET/utilities/utils.py", line 31, in wait_until_enough_gpu_memory
    raise RuntimeError(f"Failed to acquire {min_memory_available} bytes of free GPU memory after {max_retries} retries.")
RuntimeError: Failed to acquire 2147483648 bytes of free GPU memory after 10 retries.